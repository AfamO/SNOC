/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package snossoftwaretest;

/**
 *
 * @author Charles
 */
import javax.swing.*;
/**
 * This prepares and initializes the necessary SWING GUI components needed for the registration of the available SNOS sensors . It also defines and implements their corresponding methods or/and functions.
 * @author Afam;
 * @see AddSnos.java,AssignSensor.java
 * @version 1.0 
 */

public class AddSensor extends JFrame {
//private static HelloService hs;
//private static HelloServiceService proxy;
//private static ProjectWebServiceService proxy1;
    /**
     * Creates new form AssignSensor
     */
    public AddSensor() {
       
        initComponents();
        this.RegisteredSnosRecord();
        
    }
    
    
    public void SetInformationNull(){
        
        sensorTF.setText("");
                
                
    }
    public static void showHelloServiceResult()
    {
        //proxy=new HelloServiceService();
       // hs=proxy.getHelloServicePort();
        
        //String age=hs.sayAge("50");
        //String name=hs.sayHello("Afam");
        
        //System.out.println("The age is "+age+"while the Name is "+name+"\nThank You.");
    }
    public static void main(String [] args)
    {
        showHelloServiceResult();
    }
    
    public void SendSensorTodb(){
        String sensor= sensorTF.getText();
        UserInforGet get = new UserInforGet(sensor);
        if(new PatternCheck().checkSensorField(sensor, "Sensor Name", "URGENT ASSISTANCE or ALARM CLOSED\nDoor Open or DOOR CLOSED"))
       if(new Reconsoft().CheckIfItemExist("sensor_table","sensor", sensor)) 
       {
            display("The Sensor name is already registered,please enter a NEW sensor name\nThank You.","INVALID Sensor name");
       }
        
       else
       {
            new Reconsoft().AddSensor(get);
            SetInformationNull();
            display("Information Submitted Successfully","SUCCESSFUL INSERTION");
       }
       
      
      
  
    }

    
    public void RegisteredSnosRecord(){
       //snosCB.setModel(new javax.swing.DefaultComboBoxModel(new Reconsoft().queryListofRegisteredSnos()));
       //sensorCB.setModel(new javax.swing.DefaultComboBoxModel(new Reconsoft().queryListofSensors()));
   }
    private void display (String msg,String label){
       JOptionPane.showMessageDialog(this,msg,label.toUpperCase(),2);
    }
    public boolean ValidateEmptyFields()
   {
       
      
       
       
       
       if(sensorTF.getText().equals(""))
       {
            //locTA.setEditable(false);
           display("The Sensor name field is empty,please enter Sensor's name\nThank You.","EMPTY Sensor name FIELD");
            return false;
       }
       
       else
       {
           return true;
       }
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainP = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        conPane = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bB = new javax.swing.JButton();
        pB = new javax.swing.JButton();
        qB = new javax.swing.JButton();
        sensorTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sensor Information");

        conPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enter Sensor Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(0, 51, 102))); // NOI18N
        conPane.setForeground(new java.awt.Color(0, 51, 102));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Sensor Name:");

        bB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bB.setForeground(new java.awt.Color(0, 0, 102));
        bB.setText("<<Back");
        bB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBActionPerformed(evt);
            }
        });

        pB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pB.setForeground(new java.awt.Color(0, 0, 102));
        pB.setText("Process");
        pB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pBActionPerformed(evt);
            }
        });

        qB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qB.setForeground(new java.awt.Color(0, 0, 102));
        qB.setText("Quit");
        qB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout conPaneLayout = new javax.swing.GroupLayout(conPane);
        conPane.setLayout(conPaneLayout);
        conPaneLayout.setHorizontalGroup(
            conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sensorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(conPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(pB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(qB, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        conPaneLayout.setVerticalGroup(
            conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conPaneLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sensorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(conPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pB)
                    .addComponent(qB))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout mainPLayout = new javax.swing.GroupLayout(mainP);
        mainP.setLayout(mainPLayout);
        mainPLayout.setHorizontalGroup(
            mainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(conPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        mainPLayout.setVerticalGroup(
            mainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(conPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        conPane.getAccessibleContext().setAccessibleName("Register Sensors");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pBActionPerformed
        // TODO add your handling code here:
        if(this.ValidateEmptyFields())
        {
            SendSensorTodb();
        }
       
    }//GEN-LAST:event_pBActionPerformed

    private void qBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qBActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_qBActionPerformed

    private void bBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBActionPerformed
        // TODO add your handling code here:
          this.setVisible(false);
    }//GEN-LAST:event_bBActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bB;
    private javax.swing.JPanel conPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel mainP;
    private javax.swing.JButton pB;
    private javax.swing.JButton qB;
    private javax.swing.JTextField sensorTF;
    // End of variables declaration//GEN-END:variables
}
